# Docker build and push workflow
# Requires Organization/Repo secrets:
# - DOCKERHUB_USERNAME
# - DOCKERHUB_TOKEN (retrieve here: https://hub.docker.com/settings/security)
# It is assumed, that your GH Organization name is the same as your Dockerhub organization name.

name: Build and Push

on:
  release:
    types: [published]
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: pnpm install and run
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16.x
          cache: "npm"

      - name: Install
        run: |
          npm i -g pnpm
          pnpm install
          pnpm run main -p -d ./secrets -k ${{ secrets.AGE_KEY }}

  build:
    name: Test built Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: ${{ github.repository }}:latest

  push:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@master
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ github.repository }}:latest, ${{ github.repository }}:${{ github.event.release.tag_name }}
